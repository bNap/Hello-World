/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        dfs(root);
        return res;
    }
    
    void dfs(TreeNode* root){
        if(root){
            stringstream stream;  
            stream<<root->val;
            string thisStr;
            thisStr+=stream.str();
            if(root->left||root->right)
                thisStr+="->";
            temp+=thisStr;
            if(!root->left&&!root->right)
                res.push_back(temp);
            dfs(root->left);
            dfs(root->right);
            temp.erase(temp.end()-thisStr.size(),temp.end());
                
        }
    }
private:
    vector<string> res;
    string temp;
};
