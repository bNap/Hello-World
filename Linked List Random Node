/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
		
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head) {
        h=head;
    }
    
    /** Returns a random node's value. */
    int getRandom() {
		ListNode *node = h;
		int max = 0;
		for (; node; node = node->next){
			++max;
		}
		int num = rand() % max;
		ListNode *temp=h;
		for (int i = 0; i<num; i++){
			temp = temp->next;
		}
		return temp->val;
	}
private:
    ListNode *h;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
