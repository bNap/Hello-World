int binary(vector<int> vec, int left, int right, int num)
{
    while(left<=right){
        int mid=(left+right)/2;
        if(vec.at(mid)==num)
            return mid;
        else if(vec.at(mid)>num){
            right=mid-1;
        }
        else if(vec.at(mid)<num){
            left=mid+1;
        }
    }
    return -1;
}

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        for(int i=0;i<numbers.size();++i){
            if(numbers.at(i)+numbers.at(numbers.size()-1)<target)
                continue;
            int now=target-numbers.at(i);
            int second=binary(numbers,i,numbers.size()-1,now);
            if(second!=-1){
                if(i==second)
                    second+=1;
                vector<int> v;
                v.push_back(i+1);
                v.push_back(second+1);
                return v;
            }
        }
        vector<int> temp;
        return temp;
    }
};
