/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode *oneStep = head;
        ListNode *twoStep = head;
        while (oneStep && twoStep) {
            oneStep = oneStep->next;
            twoStep = twoStep->next ? twoStep->next->next : nullptr;
            if (oneStep && oneStep == twoStep)
                return true;
        }
        return false;
    }
};
