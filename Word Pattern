class Solution {
public:
	bool wordPattern(string pattern, string str) {
		int len = pattern.length();
		string temp(str);
		map<char, string> m1;
		map<string, char> m2;
		string res;
		for (int i = 0; i<len; ++i){
			int j = 0;
			int len2 = temp.length();
			while (temp[j] != ' '&&j<len2){
				++j;
			}
			string word;
			word.assign(temp, 0, j);
			temp.erase(0, j + 1);
			if (m1.find(pattern[i]) == m1.end()){
				if (m2.find(word) == m2.end())
					m2[word] = pattern[i];
				else
					return false;
				m1[pattern[i]] = word;
				res += word + ' ';
			}
			else{
				res += m1[pattern[i]] + ' ';
			}
		}
		res.erase(res.end() - 1);
		return res == str;
	}
};
